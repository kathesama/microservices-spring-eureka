server:
  port: 0

spring:
  application:
    name: product-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9090/realms/spring-boot-realm-dev/protocol/openid-connect/certs

keycloak:
  credentials:
    secret: X3GYJiKmYDOHM3ulUoaJbbGUCI03JJ6u
  resource: spring-client-api-rest
  auth-server-url: http://localhost:9090/realms/spring-boot-realm-dev/protocol/openid-connect/token

myservice:
  security:
    keycloak-oauth2:
      client:
        username: user.interconsumer
        password: 12345
        grant-type: password


jwt:
  auth:
    converter:
      resource-id: spring-client-api-rest
      principle-attribute: preferred_username

eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka

logging:
  level:
    org.hibernate.SQL: debug

#For PostgreSQL
#  datasource:
#    url: ${DB_HOST}
#    username: ${DB_USER}
#    password: ${DB_PASSWORD}
#    driver-class-name: org.postgresql.Driver
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: create

#For MYSQL
#  datasource:
#    url: ${DB_HOST}
#    username: ${DB_USER}
#    password: ${DB_PASSWORD}
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  jpa:
#    database-platform: org.hibernate.dialect.MySQLDialect
#    show-sql: true
#    hibernate:
#      ddl-auto: create
